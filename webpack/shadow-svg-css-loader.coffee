utils = require('loader-utils')
debug = require('debug')('loader/svg')

buildCss = (origData, uniqueStr) ->
  fileName = "some-files"
  namespace = "#{fileName}-svg "

  newData = origData
  newData = newData.replace /(\.st[0-9]+)/g, "$1_#{uniqueStr}"                                  # Add the unique string to all classes generated by illustrator. ex: .st1   ->  .st1_3vf9sW
  newData = newData.replace /(SVGID_[0-9]+_)/g, "$1#{uniqueStr}"                                # Add the unique string to all the gradients. ex :   fill: url(SVGID_1_)  ->    fill: url(SVGID_1_3vf9sW)
  newData = newData.replace /(font-size:[0-9\.]+);/g, '$1px;'                                   # Add px to the css font sizes
  newData = newData.replace /[\s\S]*<style type="text\/css">([\s\S]*)<\/style>[\s\S]*/g, '$1'   # Strip out everything but the css (reminder [\s\S]* is js multiline equivalent to .* )
  newData = newData.replace /enable-background:new\s+;/g, ''                                    # Remove the enable-background:new newData illustrator uses
  newData = newData.replace /\s+(\.[a-z0-9]+?{.+)/g, ".#{namespace}$1\n"                        # prefix the tags with the namespace and add a hard return
  # newData = newData.replace /\n|\r/g, ''                                                        # Strip out all returns

  newData

saveFile = (fileContents, loader) ->
  fileName = loader.resourcePath.split('/').pop().split(".")
  fileName.pop()
  fileName.push "scss"
  loader.emitFile "./#{fileName.join('.')}", fileContents

getUniqueStr = (context) ->
  return 'asdf'
  uniqueStr = utils.getOptions(context).uniqueStr
  if !uniqueStr?
    return ""
  else
    return uniqueStr

module.exports = (data)->
  uniqueStr = getUniqueStr this
  return buildCss data, uniqueStr
